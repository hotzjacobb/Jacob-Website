
* { /* for cross-browser consistancy */
    margin: 0;
    padding: 0;
} 

:root { /* for css variables manipulated by js */
    --transform-x-red: 0px;
    --transform-y-red: 0px;
    --rotation-red: 0px;
    --transform-x-blanchedalmond: 0px;
    --transform-y-blanchedalmond: 0px;
    --rotation-blanchedalmond: 0px;
    --transform-x-blue: 0px;
    --transform-y-blue: 0px;
    --rotation-blue: 0px;
    --transform-x-yellow: 0px;
    --transform-y-yellow: 0px;
    --rotation-yellow: 0px;
}

body {
    background-color: #DBDCDE;
    overflow: hidden;
    /* white-space: nowrap;* /
    /* max-height: 100%; */
    /* min-height: 100%; */
    /* padding: 0px; */
    /* margin: 0px; */
}


/*  My name */
header {
    height: 15%;
}

#name-container {
    position: relative;
    top: 50%;
    text-align: center;
    /*color: rgb(145, 110, 59);*/
    color: black;
    font-size: 200%;
    font-family: 'Poiret One';
}

/*  the shapes' portion of the canvas */
#shape-container {
    height: 65%;
    overflow: hidden; 
}

.shape {
    position: absolute; 
    left: 0; 
    right: 0;
    top: 0; 
    bottom: 0;
    margin: auto;
}

.shape.texthovered {
  animation-name: example;
  animation-duration: 1.0s;
}

.noanim {
    -webkit-animation: none !important;
    -moz-animation: none !important;
    -o-animation: none !important;
    animation: none !important;
  }

@keyframes example {
    /* 0%   {transform: skew(0deg);} */
    /* 25%  {transform: rotate(-5deg);} */
    50%  {opacity: 50%;}
    /* 50%  {border: 5px black solid;} */
    /* 75%  {transform: rotate(5deg);} */
    /* 100% {transform: skew(0deg);} */
  }
  
  /* TODO: Shape hover animation needs to be generalized for cross browser,
           needs to be made unique to each shape because already skewed 
           ones shift way more, and related to application of class needs to 
           be resolved  */

.shape.dismiss {
    /* translation specs. for when the shapes are not picked */
    -webkit-transition-property: opacity, -webkit-transform;
    -webkit-transition-duration: 3.0s, 3.0s;
    -webkit-transition-delay: 0.0s, 0.0s;
    -webkit-transition-timing-function: ease-out;
    -moz-transition-property: opacity, -webkit-transform;
    -moz-transition-duration: 3.0, 3.0s;
    -moz-transition-delay: 0.0s, 0.0s;
    -moz-transition-timing-function: ease-out;
    -ms-transformtransition-property: opacity, -webkit-transform;
    -ms-transformtransition-duration: 3.0s, 3.0s;
    -ms-transformtransition-delay: 0.0s, 0.0s;
    -ms-transformtransition-timing-function: ease-out;
    transition-property: opacity, transform;
    transition-duration: 3.0s, 3.0s;
    transition-delay: 0.0s, 0.0s;
    transition-timing-function: ease-out;
    opacity: 0%;
    -webkit-opacity: 0.0; /* for Safari */ 
    /* https://stackoverflow.com/questions/47674285/different-display-of-css-opacity-in-safari-browser */
}

.circle {
    height: 300px;
    width: 300px;
    border-radius: 50%;
}

.triangle {
    width: 0;
    height: 0;
    border-left: 125px solid transparent;
    border-right: 125px solid transparent;
    border-bottom: 300px solid blanchedalmond;
    transform: skew(-30deg);
}


.parellelogram {
    height: 295px;
    width: 250px;
    transform: skew(30deg);
}


.red {
    background-color: rgba(231, 34, 41, .88);
    left: -300px;
    /* translation specs. for when the shape moves to the centre */
    -webkit-transition-property: left, -webkit-transform, border-radius;
    -webkit-transition-duration: 3.0s, 3.0s;
    -webkit-transition-delay: 0.2s, 0.2s;
    -webkit-transition-timing-function: ease-in-out;
    -moz-transition-property: left, -webkit-transform, border-radius;
    -moz-transition-duration: 3.0, 3.0s;
    -moz-transition-delay: 0.2s, 0.2s;
    -moz-transition-timing-function: ease-in-out;
    -ms-transformtransition-property: left, -webkit-transform, border-radius;
    -ms-transformtransition-duration: 3.0s, 3.0s;
    -ms-transformtransition-delay: 0.2s, 0.2s;
    -ms-transformtransition-timing-function: ease-in-out;
    transition-property: left, transform, border-radius;
    transition-duration: 3.0s, 3.0s;
    transition-delay: 0.2s, 0.2s;
    transition-timing-function: ease-in-out;
}

.red.textclicked {
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    margin: auto;
   transform: rotate(407deg);  /* value based on rotation in #proj */
}

.red.centred {
    -webkit-transition-property: border-radius, -webkit-transform;
    -webkit-transition-duration: 1.0s, 1.0s;
    -webkit-transition-delay: 0.0s, 0.0s;
    -webkit-transition-timing-function: ease-out;
    -moz-transition-property: border-radius, -webkit-transform;
    -moz-transition-duration: 1.0s , 1.0s;
    -moz-transition-delay: 0.0s, 0.0s;
    -moz-transition-timing-function: ease-out;
    -ms-transformtransition-property: border-radius, -webkit-transform;
    -ms-transformtransition-duration: 1.0s, 1.0s;
    -ms-transformtransition-delay: 0.0s, 0.0s;
    -ms-transformtransition-timing-function: ease-out;
    transition-property: border-radius, transform;
    transition-duration: 1.0s, 1.0s;
    transition-delay: 0.0s, 0.0s;
    transition-timing-function: ease-out;
    border-radius: 0%;
    transform: rotate(-47deg) scale(0.0);
}

.red.dismiss {
    transform: translate(var(--transform-x-red), var(--transform-y-red)) rotate(var(--rotation-red));
}

.blanchedalmond {
    /*colour set in triangle due to being part of borders*/
    left: 0px;
    z-index: 4;
}

.blanchedalmond.textclicked {

}

.blanchedalmond.dismiss {
    transform: translate(var(--transform-x-blanchedalmond), var(--transform-y-blanchedalmond)) rotate(var(--rotation-blanchedalmond));
}

.blue {
    background-color: rgba(61, 93, 170, .7);
    left: 100px;
}

.blue.textclicked {

}

.blue.dismiss {
    transform: translate(var(--transform-x-blue), var(--transform-y-blue)) rotate(var(--rotation-blue));
}

.yellow {
    background-color: rgba(251, 193, 24, .8);
    left: 300px;
}

.yellow.textclicked {

}

.yellow.dismiss {
    transform: translate(var(--transform-x-yellow), var(--transform-y-yellow)) rotate(var(--rotation-yellow));
}

h2, button {
    font-family: 'Poiret One';
    font-size: 190%;
    color: black;
    font-style: normal;
    font-weight: 400;
    background: none;
    border: none;
    cursor: pointer;
}
.shape-button {
-webkit-font-smoothing: antialiased;
}

.shape-button:hover  {  
    text-decoration: underline;
    /* text-shadow: 0 0 .9px #333, 0 0 .9px #333, 0 0 .9px #333; */
}

#proj {
    transform: rotate(-47deg);
    position: relative;
    top: 110px;
    left: 75px;
}

#misc {
    transform: rotate(60deg);
    position: relative;
    z-index: 5;
    top: 92px;
    left: 170px;
}

#about {
    transform: skew(30deg); /*  unskew text */
    display: inline-block;
    text-align: center;
    position: relative;
    top: 195px;
    left: -48px;
}

#resume-alt {             /* explanation beside #resume */
    transform: skew(-30deg); 
    position: absolute;
    top: 160px;
    left: 135px;
    visibility: hidden;
}

#blog {    /* similar to resume and resume-alt; 
    as far as I know css has no good way to override a parent's z-index; if not
    the triangle would cover the blog button and make it unclickable.
    Thus we resort to this solution. For easo-of-use with animations 
    bring the parralelogram to the front and then use #blog-alt. 
    Hide #blog. */
    transform: skew(30deg); /*  unskew text */
    display: inline-block;
    text-align: center;
    position: relative;
    top: -60px;
    left: -102px;
}

#resume {   /*  as far as I know css gives no good way to overide stacking content
    inheritance so this is a hack to get around that; this text is
    a child of the yellow circle so that it is at the front. The #blue-text
    element is a child  of the blue circle in the same absolute position 
    (subimposed and hidden) but allowing for easier creation of animations
    (if creating an animation where the blue parallelogram is brought to 
    the front, hide #blue-text-alt and unhide #blue-text for ease of use */
    position: relative;
    top: 163px;
    left: 8px;
}

#blog-alt {
    transform: skew(-30deg); 
    position: relative;
    top: 9px;
    left: 113px;
    visibility: hidden;
}

/*  contact info and prescence on other sites */
footer {
   height: 20%;
   width: 100%;
   display: grid;
   grid-template-columns: repeat(3, 1fr);
}

.icon { 
    vertical-align: bottom;
    z-index: 5;
}

.icon:hover {
    transition: roll-start come-to-front;
}

img, input, #address {
    /* reduce to appropriate image size */
    max-width:20%;
    height: auto;
    /* centre image vertically and horizontally */
    position: relative;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);
    text-align: center;
}

#address {
    display: none;
    /* transform: translate(-80px, -27px); */
    position: relative;
    left: 150px;
    top: 70px;
}

a {
    font-family: 'Poiret One';
    /* color: rgba(251, 193, 24, .8); */
    color: black;
    font-size: x-large;
    font-weight: 900;
}

#email {
    grid-column: 1 / span 1;
    opacity: .8;
}

#git {
    grid-column: 2 / span 1;
    opacity: .8;
}

#linkedin {
    grid-column: 3 / span 1;
    opacity: .8;
}

#module {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    height: 0px;
    width: 0px;
    margin: auto;
    /* translation specs. for when the shape expands to module */
    -webkit-transition-property: height, width, -webkit-transform;
    -webkit-transition-duration: 1.0s, 1.0s, 1.0s;
    -webkit-transition-delay: 0.0s, 0.0s, 0.0s;
    -webkit-transition-timing-function: ease-in-out;
    -moz-transition-property: height, width, -webkit-transform;
    -moz-transition-duration: 1.0s, 1.0s, 1.0s;
    -moz-transition-delay: 0.0s, 0.0s, 0.0s;
    -moz-transition-timing-function: ease-in-out;
    -ms-transformtransition-property: height, width, -webkit-transform;
    -ms-transformtransition-duration: 1.0s, 1.0s, 1.0s;
    -ms-transformtransition-delay: 0.0s, 0.0s, 0.0s;
    -ms-transformtransition-timing-function: ease-in-out;
    transition-property: height, width, transform;
    transition-duration: 1.0s, 1.0s, 1.0s;
    transition-delay: 0.0s, 0.0s, 0.0s;
    transition-timing-function: ease-in-out;
}

#module.expand {
    /* position: relative; */
    height: 90%;
    width: 70%;
    position: absolute;
    left:0; 
    right:0;
    top:0; 
    bottom:0;
    margin:auto;
    /*background-color: rgba(231, 34, 41, .88);*/
    /* transform: rotate(0deg); */
    /* opacity: 100%; */
}

#back-arrow {
    position: absolute;
    /*height: 10%;*/
    width: 8%;
    left: 8%;
    top: 10%;
}
